[backslash]
    regex:(\\\{|\\\})
    function:escape_backslash

[comment]
    regex: ^(\n*\{comment([^}]+\}|\}[\S\s]+?comment end\})\n*)+
    function: delete_comment

[version-specific]
    regex: ^\{version-specific-content ?(?P<args>[^\}]*)\}(?P<content>[\s\S]*?)\{version-specific-content end\}
    function: check_version_specific_content

[conditional]
    regex: ^\{conditional-content ?(?P<args>[^\}]*)\}(?P<content>[\s\S]*?)\{conditional-content end\}
    function: check_conditional_content

[maths]
    regex: \{(?P<type>math|math-block)\}(?P<equation>[\s\S]+?)\{(math|math-block) end\}
    function: process_math_text

[heading]
    regex: (?P<heading_level>^#{2,6}|\A#) ?(?P<heading>[^\n#]+)
    function: create_heading

[link]
    regex: \[(?P<link_text>[^\]]+)\]\((?P<link_url>.*?)(?<!\\)\)
    function: create_link

[image set]
    regex: \{image-set\}\n(?P<images>(\{image [^\}]*\}\n)+)\{image-set end\}
    function: add_image_set

[image]
    regex: ^\{image (?P<args>[^\}]*)\}
    function: add_image

[video]
    regex: ^\{video (?P<args>[^\}]*)\}
    function: embed_video

[interactive]
    regex: ^\{interactive ?(?P<args>[^\}]*)\}
    function: add_interactive

[table of contents]
    regex: ^\{table-of-contents ?(?P<args>[^\}]*)\}
    function: create_table_of_contents

[file download button]
    regex: ^\{file ?(?P<args>[^\}]*)\}
    function: create_file_button

[link button]
    regex: ^\{button ?(?P<args>[^\}]*)\}
    function: create_link_button

[glossary definition]
    regex: \{glossary-definition (?P<args>[^\}]*)\}
    function: add_glossary_definition

[glossary link]
    regex: \{glossary-link (?P<args>[^\}]*)\}(?P<content>[^\{]*?)\{glossary-link end\}
    function: add_glossary_link

[glossary]
    regex: \{glossary\}
    function: add_glossary

[text-box]
    regex: \{text-box ?(?P<args>[^\}]*)\}(?P<content>[\s\S]*?)\{text-box end\}
    function: create_text_box

[panel]
    regex: ^\{panel ?(?P<args>[^\}]*)\}(?P<content>[\s\S]*?)\{panel end\}
    function: create_panel

[code block]
    regex: ^(?P<code>```[^\n]*\n[^`]*^```\n)
    function: process_code_block
